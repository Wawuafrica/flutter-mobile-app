name: iOS Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'master'
        cache: true
    
    - name: Create .env file
      run: |
        echo "PUSHER_APP_KEY=${{ secrets.PUSHER_APP_KEY }}" > .env
        echo "PUSHER_CLUSTER=${{ secrets.PUSHER_CLUSTER }}" >> .env
    
    - name: Install dependencies
      run: flutter pub get
    
    # - name: Run tests
    #   run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: Install Apple Certificate
      env:
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
      run: |
        # Decode certificate from hex
        echo "$APPLE_CERTIFICATE" | xxd -r -p > certificate.p12
        
        # Try creating keychain with login keychain as template
        security delete-keychain build.keychain 2>/dev/null || true
        
        # Create keychain and make it the default
        security create-keychain -p "temppassword" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "temppassword" build.keychain
        security set-keychain-settings -t 3600 -l build.keychain
        
        # Import with different approach - no specific applications
        security import certificate.p12 -k build.keychain -P "" -A
        
        # Make sure it's in the search list
        security list-keychains -d user -s build.keychain $(security list-keychains -d user | sed s/\"//g)
        
        # Set partition list with different approach
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "temppassword" build.keychain
        
        # Verify import worked
        security find-identity -v -p codesigning build.keychain
        
        # Clean up
        rm certificate.p12
    
    - name: Install Provisioning Profile
      env:
        APPLE_PROVISIONING_PROFILE: ${{ secrets.APPLE_PROVISIONING_PROFILE }}
      run: |
        # Remove header/footer and decode
        echo "$APPLE_PROVISIONING_PROFILE" | base64 --decode > profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
    
    - name: Build iOS app
      run: |
        cd ios
        flutter build ios --release --no-codesign
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath build/Runner.xcarchive \
          archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportPath build/ \
          -exportOptionsPlist ExportOptions.plist
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
    
    - name: Install Fastlane
      run: gem install fastlane
    
    - name: Setup Fastlane
      run: |
        cd ios
        fastlane init
    
    - name: Deploy to TestFlight and App Store
      env:
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      run: |
        cd ios
        echo "$APP_STORE_CONNECT_API_KEY" | base64 --decode > AuthKey.p8
        fastlane beta
        # fastlane release
    
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-app
        path: ios/build/Runner.ipa
        retention-days: 30