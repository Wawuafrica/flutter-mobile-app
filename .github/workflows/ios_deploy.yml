name: iOS Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
        
    - name: Create .env file
      run: |
        echo "PUSHER_APP_KEY=${{ secrets.PUSHER_APP_KEY }}" > .env
        echo "PUSHER_CLUSTER=${{ secrets.PUSHER_CLUSTER }}" >> .env
        
    - name: Install dependencies
      run: flutter pub get
      
    # - name: Run tests
    #   run: flutter test
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
        
    - name: Install Fastlane
      run: gem install fastlane
      
    - name: Setup Git credentials for Match
      run: |
        git config --global user.email "ci@github.com"
        git config --global user.name "GitHub Actions"
        
    # Add SSH key setup for Match repository access
    - name: Setup SSH for Match
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.MATCH_DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
      # if: secrets.MATCH_DEPLOY_KEY != ''
      
    - name: Deploy to TestFlight
      env:
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_TOKEN: ${{ secrets.MATCH_GIT_TOKEN }}
        FASTLANE_SKIP_UPDATE_CHECK: true
        FASTLANE_HIDE_GITHUB_ISSUES: true
        FASTLANE_DISABLE_ANIMATION: true
        MATCH_KEYCHAIN_NAME: signing_keychain
        MATCH_KEYCHAIN_PASSWORD: temp_password
        FL_UNLOCK_KEYCHAIN_PASSWORD: temp_password
      run: |
        cd ios
        echo "$APP_STORE_CONNECT_API_KEY" | base64 --decode > AuthKey.p8
        fastlane beta
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-app
        path: ios/build/ios/ipa/*.ipa
        retention-days: 30
      if: always()
        
    - name: Clean up
      if: always()
      run: |
        rm -f ios/AuthKey.p8
        rm -f ~/.ssh/id_rsa