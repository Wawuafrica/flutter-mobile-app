name: iOS Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'master'
        cache: true
    
    - name: Create .env file
      run: |
        echo "PUSHER_APP_KEY=${{ secrets.PUSHER_APP_KEY }}" > .env
        echo "PUSHER_CLUSTER=${{ secrets.PUSHER_CLUSTER }}" >> .env
    
    - name: Install dependencies
      run: flutter pub get
    
    # - name: Run tests
    #   run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: Build iOS app
      run: |
        cd ios
        # Build with automatic signing
        flutter build ios --release
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath build/Runner.xcarchive \
          -allowProvisioningUpdates \
          archive
    
    - name: Export IPA
      run: |
        cd ios
        # Create export options for App Store Connect API
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store-connect</string>
            <key>destination</key>
            <string>upload</string>
            <key>manageAppVersionAndBuildNumber</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        xcodebuild -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportPath build/ \
          -exportOptionsPlist ExportOptions.plist \
          -allowProvisioningUpdates
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
    
    - name: Install Fastlane
      run: gem install fastlane
    
    - name: Setup Fastlane
      run: |
        cd ios
        fastlane init
    
    - name: Deploy to TestFlight and App Store
      env:
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      run: |
        cd ios
        echo "$APP_STORE_CONNECT_API_KEY" | base64 --decode > AuthKey.p8
        fastlane beta
        # fastlane release
    
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-app
        path: ios/build/Runner.ipa
        retention-days: 30